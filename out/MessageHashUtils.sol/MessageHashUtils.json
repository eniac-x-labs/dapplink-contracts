{"abi":[],"bytecode":{"object":"0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c02114309a5e5c3c646f79aacf1d7c87c123f571f7edf9ec3682092afdb72dc864736f6c63430008180033","sourceMap":"535:3306:66:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x600080fdfea2646970667358221220c02114309a5e5c3c646f79aacf1d7c87c123f571f7edf9ec3682092afdb72dc864736f6c63430008180033","sourceMap":"535:3306:66:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@/=src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x481eac0573c56cb92c225e3d7c3a8509db8ce6f907a2af44fdfef486740bb3eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d341e11ae851c1356a3c1570fac620c19c6b4e1269f7eaee9a1f1583c1c83891\",\"dweb:/ipfs/QmaRVN9TFLpVvVJfjwiLx9fttDhr5C83NoJmyXgriKXS4T\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@/=src/","@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92","urls":["bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368","dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x481eac0573c56cb92c225e3d7c3a8509db8ce6f907a2af44fdfef486740bb3eb","urls":["bzz-raw://d341e11ae851c1356a3c1570fac620c19c6b4e1269f7eaee9a1f1583c1c83891","dweb:/ipfs/QmaRVN9TFLpVvVJfjwiLx9fttDhr5C83NoJmyXgriKXS4T"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02","urls":["bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063","dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb","urls":["bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf","dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":53438,"exportedSymbols":{"MessageHashUtils":[53437],"Strings":[53015]},"nodeType":"SourceUnit","src":"126:3717:66","nodes":[{"id":53365,"nodeType":"PragmaDirective","src":"126:24:66","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":53367,"nodeType":"ImportDirective","src":"154:39:66","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":53438,"sourceUnit":53016,"symbolAliases":[{"foreign":{"id":53366,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53015,"src":"162:7:66","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":53437,"nodeType":"ContractDefinition","src":"535:3306:66","nodes":[{"id":53378,"nodeType":"FunctionDefinition","src":"1251:467:66","nodes":[],"body":{"id":53377,"nodeType":"Block","src":"1343:375:66","nodes":[],"statements":[{"AST":{"nativeSrc":"1407:304:66","nodeType":"YulBlock","src":"1407:304:66","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1429:4:66","nodeType":"YulLiteral","src":"1429:4:66","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1435:34:66","nodeType":"YulLiteral","src":"1435:34:66","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1422:6:66","nodeType":"YulIdentifier","src":"1422:6:66"},"nativeSrc":"1422:48:66","nodeType":"YulFunctionCall","src":"1422:48:66"},"nativeSrc":"1422:48:66","nodeType":"YulExpressionStatement","src":"1422:48:66"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1532:4:66","nodeType":"YulLiteral","src":"1532:4:66","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1538:11:66","nodeType":"YulIdentifier","src":"1538:11:66"}],"functionName":{"name":"mstore","nativeSrc":"1525:6:66","nodeType":"YulIdentifier","src":"1525:6:66"},"nativeSrc":"1525:25:66","nodeType":"YulFunctionCall","src":"1525:25:66"},"nativeSrc":"1525:25:66","nodeType":"YulExpressionStatement","src":"1525:25:66"},{"nativeSrc":"1605:31:66","nodeType":"YulAssignment","src":"1605:31:66","value":{"arguments":[{"kind":"number","nativeSrc":"1625:4:66","nodeType":"YulLiteral","src":"1625:4:66","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1631:4:66","nodeType":"YulLiteral","src":"1631:4:66","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1615:9:66","nodeType":"YulIdentifier","src":"1615:9:66"},"nativeSrc":"1615:21:66","nodeType":"YulFunctionCall","src":"1615:21:66"},"variableNames":[{"name":"digest","nativeSrc":"1605:6:66","nodeType":"YulIdentifier","src":"1605:6:66"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":53374,"isOffset":false,"isSlot":false,"src":"1605:6:66","valueSize":1},{"declaration":53371,"isOffset":false,"isSlot":false,"src":"1538:11:66","valueSize":1}],"id":53376,"nodeType":"InlineAssembly","src":"1398:313:66"}]},"documentation":{"id":53369,"nodeType":"StructuredDocumentation","src":"567:678:66","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1260:22:66","parameters":{"id":53372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53371,"mutability":"mutable","name":"messageHash","nameLocation":"1291:11:66","nodeType":"VariableDeclaration","scope":53378,"src":"1283:19:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1283:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1282:21:66"},"returnParameters":{"id":53375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53374,"mutability":"mutable","name":"digest","nameLocation":"1335:6:66","nodeType":"VariableDeclaration","scope":53378,"src":"1327:14:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1327:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1326:16:66"},"scope":53437,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53404,"nodeType":"FunctionDefinition","src":"2196:232:66","nodes":[],"body":{"id":53403,"nodeType":"Block","src":"2282:146:66","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":53390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2336:32:66","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":53395,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53381,"src":"2393:7:66","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":53396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2401:6:66","memberName":"length","nodeType":"MemberAccess","src":"2393:14:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":53393,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53015,"src":"2376:7:66","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$53015_$","typeString":"type(library Strings)"}},"id":53394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2384:8:66","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":52828,"src":"2376:16:66","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":53397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:32:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":53392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2370:5:66","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":53391,"name":"bytes","nodeType":"ElementaryTypeName","src":"2370:5:66","typeDescriptions":{}}},"id":53398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:39:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":53399,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53381,"src":"2411:7:66","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":53388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2323:5:66","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":53387,"name":"bytes","nodeType":"ElementaryTypeName","src":"2323:5:66","typeDescriptions":{}}},"id":53389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2329:6:66","memberName":"concat","nodeType":"MemberAccess","src":"2323:12:66","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":53400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:96:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":53386,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2313:9:66","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":53401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:107:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":53385,"id":53402,"nodeType":"Return","src":"2293:127:66"}]},"documentation":{"id":53379,"nodeType":"StructuredDocumentation","src":"1726:464:66","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2205:22:66","parameters":{"id":53382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53381,"mutability":"mutable","name":"message","nameLocation":"2241:7:66","nodeType":"VariableDeclaration","scope":53404,"src":"2228:20:66","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":53380,"name":"bytes","nodeType":"ElementaryTypeName","src":"2228:5:66","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2227:22:66"},"returnParameters":{"id":53385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":53404,"src":"2273:7:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2273:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2272:9:66"},"scope":53437,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53424,"nodeType":"FunctionDefinition","src":"2782:193:66","nodes":[],"body":{"id":53423,"nodeType":"Block","src":"2893:82:66","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":53417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2938:10:66","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":53418,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53407,"src":"2950:9:66","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":53419,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53409,"src":"2961:4:66","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":53415,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2921:3:66","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":53416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2925:12:66","memberName":"encodePacked","nodeType":"MemberAccess","src":"2921:16:66","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":53420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:45:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":53414,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2911:9:66","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":53421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2911:56:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":53413,"id":53422,"nodeType":"Return","src":"2904:63:66"}]},"documentation":{"id":53405,"nodeType":"StructuredDocumentation","src":"2436:340:66","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2791:31:66","parameters":{"id":53410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53407,"mutability":"mutable","name":"validator","nameLocation":"2831:9:66","nodeType":"VariableDeclaration","scope":53424,"src":"2823:17:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53406,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:66","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53409,"mutability":"mutable","name":"data","nameLocation":"2855:4:66","nodeType":"VariableDeclaration","scope":53424,"src":"2842:17:66","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":53408,"name":"bytes","nodeType":"ElementaryTypeName","src":"2842:5:66","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2822:38:66"},"returnParameters":{"id":53413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":53424,"src":"2884:7:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2884:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2883:9:66"},"scope":53437,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":53436,"nodeType":"FunctionDefinition","src":"3428:410:66","nodes":[],"body":{"id":53435,"nodeType":"Block","src":"3537:301:66","nodes":[],"statements":[{"AST":{"nativeSrc":"3601:230:66","nodeType":"YulBlock","src":"3601:230:66","statements":[{"nativeSrc":"3616:22:66","nodeType":"YulVariableDeclaration","src":"3616:22:66","value":{"arguments":[{"kind":"number","nativeSrc":"3633:4:66","nodeType":"YulLiteral","src":"3633:4:66","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3627:5:66","nodeType":"YulIdentifier","src":"3627:5:66"},"nativeSrc":"3627:11:66","nodeType":"YulFunctionCall","src":"3627:11:66"},"variables":[{"name":"ptr","nativeSrc":"3620:3:66","nodeType":"YulTypedName","src":"3620:3:66","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3659:3:66","nodeType":"YulIdentifier","src":"3659:3:66"},{"hexValue":"1901","kind":"string","nativeSrc":"3664:10:66","nodeType":"YulLiteral","src":"3664:10:66","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3652:6:66","nodeType":"YulIdentifier","src":"3652:6:66"},"nativeSrc":"3652:23:66","nodeType":"YulFunctionCall","src":"3652:23:66"},"nativeSrc":"3652:23:66","nodeType":"YulExpressionStatement","src":"3652:23:66"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3700:3:66","nodeType":"YulIdentifier","src":"3700:3:66"},{"kind":"number","nativeSrc":"3705:4:66","nodeType":"YulLiteral","src":"3705:4:66","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3696:3:66","nodeType":"YulIdentifier","src":"3696:3:66"},"nativeSrc":"3696:14:66","nodeType":"YulFunctionCall","src":"3696:14:66"},{"name":"domainSeparator","nativeSrc":"3712:15:66","nodeType":"YulIdentifier","src":"3712:15:66"}],"functionName":{"name":"mstore","nativeSrc":"3689:6:66","nodeType":"YulIdentifier","src":"3689:6:66"},"nativeSrc":"3689:39:66","nodeType":"YulFunctionCall","src":"3689:39:66"},"nativeSrc":"3689:39:66","nodeType":"YulExpressionStatement","src":"3689:39:66"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3753:3:66","nodeType":"YulIdentifier","src":"3753:3:66"},{"kind":"number","nativeSrc":"3758:4:66","nodeType":"YulLiteral","src":"3758:4:66","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3749:3:66","nodeType":"YulIdentifier","src":"3749:3:66"},"nativeSrc":"3749:14:66","nodeType":"YulFunctionCall","src":"3749:14:66"},{"name":"structHash","nativeSrc":"3765:10:66","nodeType":"YulIdentifier","src":"3765:10:66"}],"functionName":{"name":"mstore","nativeSrc":"3742:6:66","nodeType":"YulIdentifier","src":"3742:6:66"},"nativeSrc":"3742:34:66","nodeType":"YulFunctionCall","src":"3742:34:66"},"nativeSrc":"3742:34:66","nodeType":"YulExpressionStatement","src":"3742:34:66"},{"nativeSrc":"3790:30:66","nodeType":"YulAssignment","src":"3790:30:66","value":{"arguments":[{"name":"ptr","nativeSrc":"3810:3:66","nodeType":"YulIdentifier","src":"3810:3:66"},{"kind":"number","nativeSrc":"3815:4:66","nodeType":"YulLiteral","src":"3815:4:66","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3800:9:66","nodeType":"YulIdentifier","src":"3800:9:66"},"nativeSrc":"3800:20:66","nodeType":"YulFunctionCall","src":"3800:20:66"},"variableNames":[{"name":"digest","nativeSrc":"3790:6:66","nodeType":"YulIdentifier","src":"3790:6:66"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":53432,"isOffset":false,"isSlot":false,"src":"3790:6:66","valueSize":1},{"declaration":53427,"isOffset":false,"isSlot":false,"src":"3712:15:66","valueSize":1},{"declaration":53429,"isOffset":false,"isSlot":false,"src":"3765:10:66","valueSize":1}],"id":53434,"nodeType":"InlineAssembly","src":"3592:239:66"}]},"documentation":{"id":53425,"nodeType":"StructuredDocumentation","src":"2983:439:66","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3437:15:66","parameters":{"id":53430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53427,"mutability":"mutable","name":"domainSeparator","nameLocation":"3461:15:66","nodeType":"VariableDeclaration","scope":53436,"src":"3453:23:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":53429,"mutability":"mutable","name":"structHash","nameLocation":"3486:10:66","nodeType":"VariableDeclaration","scope":53436,"src":"3478:18:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3478:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3452:45:66"},"returnParameters":{"id":53433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53432,"mutability":"mutable","name":"digest","nameLocation":"3529:6:66","nodeType":"VariableDeclaration","scope":53436,"src":"3521:14:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3521:7:66","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3520:16:66"},"scope":53437,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":53368,"nodeType":"StructuredDocumentation","src":"197:336:66","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[53437],"name":"MessageHashUtils","nameLocation":"543:16:66","scope":53438,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":66}