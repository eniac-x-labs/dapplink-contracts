{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@/=src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xbd4d5abdb240f249320828b0c339096f8b7efa1dfde577dad07116bf3af7a618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://317cadb9839a6a619ec5c344bc41fb8676fc4ba09e848a158148d871c0391781\",\"dweb:/ipfs/QmPYBEc8ThmMUYtXAFUrxXKp3teiBvr1z1iQ5GnxGRkoy8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x8fc7a8f53c59b52519fd6d9535b448350d29a8c133c6417b37afa64f110663ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5680333498a02ed23f00e9605098c71be4e943a75aa2112048d1ca21c60e171\",\"dweb:/ipfs/QmRpC8N93py2KnUSyJWteUbeS3JjepCN6dhNRSRvr1bw41\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidInitialization"},{"inputs":[],"type":"error","name":"NotInitializing"},{"inputs":[{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@/=src/","@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol":"ERC165Upgradeable"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0xbd4d5abdb240f249320828b0c339096f8b7efa1dfde577dad07116bf3af7a618","urls":["bzz-raw://317cadb9839a6a619ec5c344bc41fb8676fc4ba09e848a158148d871c0391781","dweb:/ipfs/QmPYBEc8ThmMUYtXAFUrxXKp3teiBvr1z1iQ5GnxGRkoy8"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0x8fc7a8f53c59b52519fd6d9535b448350d29a8c133c6417b37afa64f110663ab","urls":["bzz-raw://b5680333498a02ed23f00e9605098c71be4e943a75aa2112048d1ca21c60e171","dweb:/ipfs/QmRpC8N93py2KnUSyJWteUbeS3JjepCN6dhNRSRvr1bw41"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d","urls":["bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9","dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol","id":49278,"exportedSymbols":{"ERC165Upgradeable":[49277],"IERC165":[53473],"Initializable":[47639]},"nodeType":"SourceUnit","src":"117:1099:35","nodes":[{"id":49239,"nodeType":"PragmaDirective","src":"117:24:35","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":49241,"nodeType":"ImportDirective","src":"145:80:35","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":49278,"sourceUnit":53474,"symbolAliases":[{"foreign":{"id":49240,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53473,"src":"153:7:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49243,"nodeType":"ImportDirective","src":"227:66:35","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":49278,"sourceUnit":47640,"symbolAliases":[{"foreign":{"id":49242,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47639,"src":"235:13:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49277,"nodeType":"ContractDefinition","src":"788:426:35","nodes":[{"id":49254,"nodeType":"FunctionDefinition","src":"857:59:35","nodes":[],"body":{"id":49253,"nodeType":"Block","src":"908:8:35","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":49251,"kind":"modifierInvocation","modifierName":{"id":49250,"name":"onlyInitializing","nameLocations":["891:16:35"],"nodeType":"IdentifierPath","referencedDeclaration":47548,"src":"891:16:35"},"nodeType":"ModifierInvocation","src":"891:16:35"}],"name":"__ERC165_init","nameLocation":"866:13:35","parameters":{"id":49249,"nodeType":"ParameterList","parameters":[],"src":"879:2:35"},"returnParameters":{"id":49252,"nodeType":"ParameterList","parameters":[],"src":"908:0:35"},"scope":49277,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":49260,"nodeType":"FunctionDefinition","src":"924:69:35","nodes":[],"body":{"id":49259,"nodeType":"Block","src":"985:8:35","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":49257,"kind":"modifierInvocation","modifierName":{"id":49256,"name":"onlyInitializing","nameLocations":["968:16:35"],"nodeType":"IdentifierPath","referencedDeclaration":47548,"src":"968:16:35"},"nodeType":"ModifierInvocation","src":"968:16:35"}],"name":"__ERC165_init_unchained","nameLocation":"933:23:35","parameters":{"id":49255,"nodeType":"ParameterList","parameters":[],"src":"956:2:35"},"returnParameters":{"id":49258,"nodeType":"ParameterList","parameters":[],"src":"985:0:35"},"scope":49277,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":49276,"nodeType":"FunctionDefinition","src":"1063:148:35","nodes":[],"body":{"id":49275,"nodeType":"Block","src":"1145:66:35","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":49273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49268,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49263,"src":"1163:11:35","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49270,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53473,"src":"1183:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$53473_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$53473_$","typeString":"type(contract IERC165)"}],"id":49269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1178:4:35","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":49271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1178:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$53473","typeString":"type(contract IERC165)"}},"id":49272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1192:11:35","memberName":"interfaceId","nodeType":"MemberAccess","src":"1178:25:35","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1163:40:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49267,"id":49274,"nodeType":"Return","src":"1156:47:35"}]},"baseFunctions":[53472],"documentation":{"id":49261,"nodeType":"StructuredDocumentation","src":"999:58:35","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1072:17:35","parameters":{"id":49264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49263,"mutability":"mutable","name":"interfaceId","nameLocation":"1097:11:35","nodeType":"VariableDeclaration","scope":49276,"src":"1090:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":49262,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1090:6:35","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1089:20:35"},"returnParameters":{"id":49267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49276,"src":"1139:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":49265,"name":"bool","nodeType":"ElementaryTypeName","src":"1139:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1138:6:35"},"scope":49277,"stateMutability":"view","virtual":true,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":49245,"name":"Initializable","nameLocations":["827:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":47639,"src":"827:13:35"},"id":49246,"nodeType":"InheritanceSpecifier","src":"827:13:35"},{"baseName":{"id":49247,"name":"IERC165","nameLocations":["842:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":53473,"src":"842:7:35"},"id":49248,"nodeType":"InheritanceSpecifier","src":"842:7:35"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":49244,"nodeType":"StructuredDocumentation","src":"297:489:35","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"linearizedBaseContracts":[49277,53473,47639],"name":"ERC165Upgradeable","nameLocation":"806:17:35","scope":49278,"usedErrors":[47402,47405],"usedEvents":[47410]}],"license":"MIT"},"id":35}